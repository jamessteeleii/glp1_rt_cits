)
slope_log_plot <- rob_meta_arm_log_slope_prep |>
mutate(energy_deficit = seq(1,1750,1)) |>
ggplot(aes(x = energy_deficit)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_ribbon(aes(ymin = lower.CL, ymax = upper.CL), alpha = 0.5) +
geom_line(aes(y=estimate)) +
labs(
x = "Energy Deficit (kcal/day)",
# y = "Marginal Slope for Lean Mass Change (kg)",
y = "Marginal Slope for Lean Mass Change (SMD)",
title = "Incremental marginal slope of lean mass change for 50 kcal/day increase"
) +
theme_classic() +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10)
)
log_plots <- (pred_log_plot / slope_log_plot) +
plot_annotation(
tag_levels = "i",
title = "Arm based linear and log term meta-regression of energy deficit on lean mass change",
subtitle = "Model includes random intercepts for study and effect, and random slopes for energy deficit at study level"
) &
theme(
legend.position = "bottom"
)
log_plots
preds <- predict(rob_meta_arm_log, newmods=cbind(seq(0,1750,10), log1p(seq(0,1750,10))), addx = TRUE)
#### g marginal slope
rob_meta_arm_log_slope_prep <- emmprep(rob_meta_arm_log,
at=list(energy_deficit=seq(0,1750,10)))
rob_meta_arm_log_slope_prep <- confint(emmeans(rob_meta_arm_log_slope_prep,consec~energy_deficit,
weights = "prop")$contrasts)
rob_meta_arm_log_slope_prep2<-qt(.975,rob_meta_arm_log_slope_prep$df)
rob_meta_arm_log_slope_prep3<-sqrt((rob_meta_arm_log_slope_prep$SE^2)+sum(rob_meta_arm_log$sigma2))
rob_meta_arm_log_slope_prep$lower.PI<-rob_meta_arm_log_slope_prep$estimate-(rob_meta_arm_log_slope_prep2*rob_meta_arm_log_slope_prep3)
rob_meta_arm_log_slope_prep$upper.PI<-rob_meta_arm_log_slope_prep$estimate+(rob_meta_arm_log_slope_prep2*rob_meta_arm_log_slope_prep3)
pred_log_plot <- preds |>
as.data.frame() |>
rename(energy_deficit = "X.energy_deficit") |>
ggplot(aes(x = energy_deficit)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_point(data = murphy_koehler_data, aes(y = yi, size = size), alpha = 0.5) +
geom_ribbon(aes(ymin = ci.lb, ymax = ci.ub), alpha = 0.5) +
geom_line(aes(y=pred)) +
# scale_color_manual(values = c("darkorange", "darkgreen")) +
labs(
x = "Energy Deficit (kcal/day)",
# y = "Lean Mass Change (kg)",
y = "Lean Mass Change (SMD)",
color = "Condition",
title = "Predicted lean mass change"
) +
guides(
size = "none"
) +
theme_classic() +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10)
)
slope_log_plot <- rob_meta_arm_log_slope_prep |>
mutate(energy_deficit = seq(1,1750,10)) |>
ggplot(aes(x = energy_deficit)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_ribbon(aes(ymin = lower.CL, ymax = upper.CL), alpha = 0.5) +
geom_line(aes(y=estimate)) +
labs(
x = "Energy Deficit (kcal/day)",
# y = "Marginal Slope for Lean Mass Change (kg)",
y = "Marginal Slope for Lean Mass Change (SMD)",
title = "Incremental marginal slope of lean mass change for 50 kcal/day increase"
) +
theme_classic() +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10)
)
log_plots <- (pred_log_plot / slope_log_plot) +
plot_annotation(
tag_levels = "i",
title = "Arm based linear and log term meta-regression of energy deficit on lean mass change",
subtitle = "Model includes random intercepts for study and effect, and random slopes for energy deficit at study level"
) &
theme(
legend.position = "bottom"
)
log_plots
View(rob_meta_arm_log_slope_prep)
slope_log_plot <- rob_meta_arm_log_slope_prep |>
mutate(energy_deficit = seq(1,1750,10)) |>
ggplot(aes(x = energy_deficit)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_ribbon(aes(ymin = lower.CL, ymax = upper.CL), alpha = 0.5) +
geom_line(aes(y=estimate)) +
labs(
x = "Energy Deficit (kcal/day)",
# y = "Marginal Slope for Lean Mass Change (kg)",
y = "Marginal Slope for Lean Mass Change (SMD)",
title = "Incremental marginal slope of lean mass change for 10 kcal/day increase in deficit"
) +
theme_classic() +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10)
)
log_plots <- (pred_log_plot / slope_log_plot) +
plot_annotation(
tag_levels = "i",
title = "Arm based linear and log term meta-regression of energy deficit on lean mass change",
subtitle = "Model includes random intercepts for study and effect, and random slopes for energy deficit at study level"
) &
theme(
legend.position = "bottom"
)
log_plots
meta_arm_log <- rma.mv(yi, vi,
# random = list(~ energy_deficit + log1p(energy_deficit) | study, ~1 | arm),
# mods = ~ energy_deficit + log1p(energy_deficit),
random = list(~ ns(energy_deficit, df=3) |  study, ~1 | arm),
mods = ~ ns(energy_deficit, df=3)
struct = "GEN",
meta_arm_log <- rma.mv(yi, vi,
# random = list(~ energy_deficit + log1p(energy_deficit) | study, ~1 | arm),
# mods = ~ energy_deficit + log1p(energy_deficit),
random = list(~ ns(energy_deficit, df=3) |  study, ~1 | arm),
mods = ~ ns(energy_deficit, df=3),
struct = "GEN",
data = murphy_koehler_data,
method="REML", test="t",
# control=list(optimizer="optim", optmethod="Nelder-Mead")
)
library(mgcv)
meta_arm_log <- rma.mv(yi, vi,
# random = list(~ energy_deficit + log1p(energy_deficit) | study, ~1 | arm),
# mods = ~ energy_deficit + log1p(energy_deficit),
random = list(~ ns(energy_deficit, df=3) |  study, ~1 | arm),
mods = ~ ns(energy_deficit, df=3),
struct = "GEN",
data = murphy_koehler_data,
method="REML", test="t",
# control=list(optimizer="optim", optmethod="Nelder-Mead")
)
library(splines)
meta_arm_log <- rma.mv(yi, vi,
# random = list(~ energy_deficit + log1p(energy_deficit) | study, ~1 | arm),
# mods = ~ energy_deficit + log1p(energy_deficit),
random = list(~ ns(energy_deficit, df=3) |  study, ~1 | arm),
mods = ~ ns(energy_deficit, df=3),
struct = "GEN",
data = murphy_koehler_data,
method="REML", test="t",
# control=list(optimizer="optim", optmethod="Nelder-Mead")
)
meta_arm_log <- rma.mv(yi, vi,
# random = list(~ energy_deficit + log1p(energy_deficit) | study, ~1 | arm),
# mods = ~ energy_deficit + log1p(energy_deficit),
random = list(~ ns(energy_deficit, df=3) |  study, ~1 | arm),
mods = ~ ns(energy_deficit, df=3),
struct = "GEN",
data = murphy_koehler_data,
method="REML", test="t",
control=list(optimizer="optim", optmethod="Nelder-Mead")
)
meta_arm_log <- rma.mv(yi, vi,
# random = list(~ energy_deficit + log1p(energy_deficit) | study, ~1 | arm),
# mods = ~ energy_deficit + log1p(energy_deficit),
random = list(~ ns(energy_deficit, df=3) |  study, ~1 | arm),
mods = ~ ns(energy_deficit, df=3),
struct = "GEN",
data = murphy_koehler_data,
method="REML", test="t",
control=list(optimizer="optim", optmethod="BFGS")
)
rob_meta_arm_log <- robust(meta_arm_log, cluster = murphy_koehler_data$study, clubSandwich = TRUE)
library(splines)
meta_arm_ncs <- rma.mv(yi, vi,
random = list(~ ns(energy_deficit, df=3) |  study, ~1 | arm),
mods = ~ ns(energy_deficit, df=3),
struct = "GEN",
data = murphy_koehler_data,
method="REML", test="t",
control=list(optimizer="optim", optmethod="BFGS")
)
rob_meta_arm_ncs
rob_meta_arm_ncs <- robust(meta_arm_ncs, cluster = murphy_koehler_data$study, clubSandwich = TRUE)
rob_meta_arm_ncs
?ns
quantile(murphy_koehler_data$energy_deficit)
rob_meta_arm_ncs <- robust(meta_arm_ncs, cluster = murphy_koehler_data$study, clubSandwich = TRUE)
preds <- predict(rob_meta_arm_ncs, newmods=unname(ns(seq(0,1750,10), knots=c(72,553), Boundary.knots=c(0,1750))), addx = TRUE)
#### g marginal slope
rob_meta_arm_ncs_slope_prep <- emmprep(rob_meta_arm_ncs,
at=list(energy_deficit=seq(0,1750,10)))
rob_meta_arm_ncs_slope_prep <- confint(emmeans(rob_meta_arm_ncs_slope_prep,consec~energy_deficit,
weights = "prop")$contrasts)
rob_meta_arm_ncs_slope_prep2<-qt(.975,rob_meta_arm_ncs_slope_prep$df)
rob_meta_arm_ncs_slope_prep3<-sqrt((rob_meta_arm_ncs_slope_prep$SE^2)+sum(rob_meta_arm_ncs$sigma2))
rob_meta_arm_ncs_slope_prep$lower.PI<-rob_meta_arm_ncs_slope_prep$estimate-(rob_meta_arm_ncs_slope_prep2*rob_meta_arm_ncs_slope_prep3)
rob_meta_arm_ncs_slope_prep$upper.PI<-rob_meta_arm_ncs_slope_prep$estimate+(rob_meta_arm_ncs_slope_prep2*rob_meta_arm_ncs_slope_prep3)
pred_ncs_plot <- preds |>
as.data.frame() |>
rename(energy_deficit = "X.energy_deficit") |>
ggplot(aes(x = energy_deficit)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_point(data = murphy_koehler_data, aes(y = yi, size = size), alpha = 0.5) +
geom_ribbon(aes(ymin = ci.lb, ymax = ci.ub), alpha = 0.5) +
geom_line(aes(y=pred)) +
# scale_color_manual(values = c("darkorange", "darkgreen")) +
labs(
x = "Energy Deficit (kcal/day)",
# y = "Lean Mass Change (kg)",
y = "Lean Mass Change (SMD)",
color = "Condition",
title = "Predicted lean mass change"
) +
guides(
size = "none"
) +
theme_classic() +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10)
)
ncs_plots <- (pred_ncs_plot / slope_ncs_plot) +
plot_annotation(
tag_levels = "i",
title = "Arm based natural cubic spline meta-regression of energy deficit on lean mass change",
subtitle = "Model includes random intercepts for study and effect, and random slopes for energy deficit at study level"
) &
theme(
legend.position = "bottom"
)
pred_ncs_plot <- preds |>
as.data.frame() |>
rename(energy_deficit = "X.energy_deficit") |>
ggplot(aes(x = energy_deficit)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_point(data = murphy_koehler_data, aes(y = yi, size = size), alpha = 0.5) +
geom_ribbon(aes(ymin = ci.lb, ymax = ci.ub), alpha = 0.5) +
geom_line(aes(y=pred)) +
# scale_color_manual(values = c("darkorange", "darkgreen")) +
labs(
x = "Energy Deficit (kcal/day)",
# y = "Lean Mass Change (kg)",
y = "Lean Mass Change (SMD)",
color = "Condition",
title = "Predicted lean mass change"
) +
guides(
size = "none"
) +
theme_classic() +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10)
)
preds
pred_ncs_plot <- preds |>
as.data.frame() |>
mutate(energy_deficit = seq(0,1750,10)) |>
ggplot(aes(x = energy_deficit)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_point(data = murphy_koehler_data, aes(y = yi, size = size), alpha = 0.5) +
geom_ribbon(aes(ymin = ci.lb, ymax = ci.ub), alpha = 0.5) +
geom_line(aes(y=pred)) +
# scale_color_manual(values = c("darkorange", "darkgreen")) +
labs(
x = "Energy Deficit (kcal/day)",
# y = "Lean Mass Change (kg)",
y = "Lean Mass Change (SMD)",
color = "Condition",
title = "Predicted lean mass change"
) +
guides(
size = "none"
) +
theme_classic() +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10)
)
slope_ncs_plot <- rob_meta_arm_ncs_slope_prep |>
mutate(energy_deficit = seq(1,1750,10)) |>
ggplot(aes(x = energy_deficit)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_ribbon(aes(ymin = lower.CL, ymax = upper.CL), alpha = 0.5) +
geom_line(aes(y=estimate)) +
labs(
x = "Energy Deficit (kcal/day)",
# y = "Marginal Slope for Lean Mass Change (kg)",
y = "Marginal Slope for Lean Mass Change (SMD)",
title = "Incremental marginal slope of lean mass change for 10 kcal/day increase in deficit"
) +
theme_classic() +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10)
)
ncs_plots <- (pred_ncs_plot / slope_ncs_plot) +
plot_annotation(
tag_levels = "i",
title = "Arm based natural cubic spline meta-regression of energy deficit on lean mass change",
subtitle = "Model includes random intercepts for study and effect, and random slopes for energy deficit at study level"
) &
theme(
legend.position = "bottom"
)
ncs_plots
stdres_plot_ncs <- data.frame(fit = fitted(meta_arm_ncs), rstand = rstandard(meta_arm_ncs)$z) %>%
ggplot(aes(x=fit, y=rstand)) +
geom_hline(yintercept=0, linetype = "dashed") +
geom_point(alpha=0.5) +
geom_smooth() +
labs(x = "Fitted values",
y = "Standardised Residuals",
title = "Linearity",
subtitle = "Reference line should be flat and horizontal") +
theme_classic()
res_plot_ncs <- data.frame(fit = fitted(meta_arm_ncs), rstand = rstandard(meta_arm_ncs)$resid) %>%
ggplot(aes(x=fit, y=rstand)) +
geom_hline(yintercept=0, linetype = "dashed") +
geom_point(alpha=0.5) +
geom_smooth() +
labs(x = "Fitted values",
y = "Observed Residuals",
title = "Linearity",
subtitle = "Reference line should be flat and horizontal") +
theme_classic()
(stdres_plot_ncs / res_plot_ncs)
stdres_plot_log <- data.frame(fit = fitted(meta_arm_log), rstand = rstandard(meta_arm_log)$z) %>%
ggplot(aes(x=fit, y=rstand)) +
geom_hline(yintercept=0, linetype = "dashed") +
geom_point(alpha=0.5) +
geom_smooth() +
labs(x = "Fitted values",
y = "Standardised Residuals",
title = "Linearity",
subtitle = "Reference line should be flat and horizontal") +
theme_classic()
res_plot_log <- data.frame(fit = fitted(meta_arm_log), rstand = rstandard(meta_arm_log)$resid) %>%
ggplot(aes(x=fit, y=rstand)) +
geom_hline(yintercept=0, linetype = "dashed") +
geom_point(alpha=0.5) +
geom_smooth() +
labs(x = "Fitted values",
y = "Observed Residuals",
title = "Linearity",
subtitle = "Reference line should be flat and horizontal") +
theme_classic()
(stdres_plot_log / res_plot_log)
meta_arm_log <- rma.mv(yi, vi,
# # random = list(~ energy_deficit + log1p(energy_deficit) | study, ~1 | arm),
# # mods = ~ energy_deficit + log1p(energy_deficit),
# struct = "GEN",
data = murphy_koehler_data,
method="REML", test="t",
control=list(optimizer="optim", optmethod="Nelder-Mead")
)
rob_meta_arm_log <- robust(meta_arm_log, cluster = murphy_koehler_data$study, clubSandwich = TRUE)
stdres_plot_log <- data.frame(fit = fitted(meta_arm_log), rstand = rstandard(meta_arm_log)$z) %>%
ggplot(aes(x=fit, y=rstand)) +
geom_hline(yintercept=0, linetype = "dashed") +
geom_point(alpha=0.5) +
geom_smooth() +
labs(x = "Fitted values",
y = "Standardised Residuals",
title = "Linearity",
subtitle = "Reference line should be flat and horizontal") +
theme_classic()
res_plot_log <- data.frame(fit = fitted(meta_arm_log), rstand = rstandard(meta_arm_log)$resid) %>%
ggplot(aes(x=fit, y=rstand)) +
geom_hline(yintercept=0, linetype = "dashed") +
geom_point(alpha=0.5) +
geom_smooth() +
labs(x = "Fitted values",
y = "Observed Residuals",
title = "Linearity",
subtitle = "Reference line should be flat and horizontal") +
theme_classic()
(stdres_plot_log / res_plot_log)
meta_arm_log <- rma.mv(yi, vi,
random = list(~ energy_deficit + log1p(energy_deficit) | study, ~1 | arm),
mods = ~ energy_deficit + log1p(energy_deficit),
struct = "GEN",
data = murphy_koehler_data,
method="REML", test="t",
control=list(optimizer="optim", optmethod="Nelder-Mead")
)
rob_meta_arm_log <- robust(meta_arm_log, cluster = murphy_koehler_data$study, clubSandwich = TRUE)
murphy_koehler_data <- read_csv("data/murphy_koehler_study_data.csv") |>
group_by(study) |>
mutate(
study = cur_group_id()
) |>
group_by(study, energy_deficit) |>
mutate(
arm = cur_group_id()
) |>
ungroup() |>
filter(outcome == "LM" & energy_deficit > 0) |>
mutate(
vi = ((ci.ub - yi)/1.96)^2
) |>
# add study weights/sizes
mutate(
wi = 1/sqrt(vi),
size = 0.5 + 3.0 * (wi - min(wi, na.rm=TRUE))/(max(wi, na.rm=TRUE) - min(wi, na.rm=TRUE))
)
meta_arm_log <- rma.mv(yi, vi,
random = list(~ energy_deficit + log1p(energy_deficit) | study, ~1 | arm),
mods = ~ energy_deficit + log1p(energy_deficit),
struct = "GEN",
data = murphy_koehler_data,
method="REML", test="t",
control=list(optimizer="optim", optmethod="Nelder-Mead")
)
meta_arm_log <- rma.mv(yi, vi,
random = list(~ energy_deficit + log1p(energy_deficit) | study, ~1 | arm),
mods = ~ energy_deficit + log1p(energy_deficit),
struct = "GEN",
data = murphy_koehler_data,
method="REML", test="t",
control=list(optimizer="optim", optmethod="BFGS")
)
rob_meta_arm_log <- robust(meta_arm_log, cluster = murphy_koehler_data$study, clubSandwich = TRUE)
preds <- predict(rob_meta_arm_log, newmods=cbind(seq(0,1750,10), log1p(seq(0,1750,10))), addx = TRUE)
#### g marginal slope
rob_meta_arm_log_slope_prep <- emmprep(rob_meta_arm_log,
at=list(energy_deficit=seq(0,1750,10)))
#### g marginal slope
rob_meta_arm_log_slope_prep <- emmprep(rob_meta_arm_log,
at=list(energy_deficit=seq(0,1750,10)))
rob_meta_arm_log_slope_prep <- confint(emmeans(rob_meta_arm_log_slope_prep,consec~energy_deficit,
weights = "prop")$contrasts)
rob_meta_arm_log_slope_prep2<-qt(.975,rob_meta_arm_log_slope_prep$df)
rob_meta_arm_log_slope_prep3<-sqrt((rob_meta_arm_log_slope_prep$SE^2)+sum(rob_meta_arm_log$sigma2))
rob_meta_arm_log_slope_prep$lower.PI<-rob_meta_arm_log_slope_prep$estimate-(rob_meta_arm_log_slope_prep2*rob_meta_arm_log_slope_prep3)
rob_meta_arm_log_slope_prep$upper.PI<-rob_meta_arm_log_slope_prep$estimate+(rob_meta_arm_log_slope_prep2*rob_meta_arm_log_slope_prep3)
pred_log_plot <- preds |>
as.data.frame() |>
rename(energy_deficit = "X.energy_deficit") |>
ggplot(aes(x = energy_deficit)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_point(data = murphy_koehler_data, aes(y = yi, size = size), alpha = 0.5) +
geom_ribbon(aes(ymin = ci.lb, ymax = ci.ub), alpha = 0.5) +
geom_line(aes(y=pred)) +
# scale_color_manual(values = c("darkorange", "darkgreen")) +
labs(
x = "Energy Deficit (kcal/day)",
# y = "Lean Mass Change (kg)",
y = "Lean Mass Change (SMD)",
color = "Condition",
title = "Predicted lean mass change"
) +
guides(
size = "none"
) +
theme_classic() +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10)
)
slope_log_plot <- rob_meta_arm_log_slope_prep |>
mutate(energy_deficit = seq(1,1750,10)) |>
ggplot(aes(x = energy_deficit)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_ribbon(aes(ymin = lower.CL, ymax = upper.CL), alpha = 0.5) +
geom_line(aes(y=estimate)) +
labs(
x = "Energy Deficit (kcal/day)",
# y = "Marginal Slope for Lean Mass Change (kg)",
y = "Marginal Slope for Lean Mass Change (SMD)",
title = "Incremental marginal slope of lean mass change for 10 kcal/day increase in deficit"
) +
theme_classic() +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10)
)
log_plots <- (pred_log_plot / slope_log_plot) +
plot_annotation(
tag_levels = "i",
title = "Arm based linear and log term meta-regression of energy deficit on lean mass change",
subtitle = "Model includes random intercepts for study and effect, and random slopes for energy deficit at study level"
) &
theme(
legend.position = "bottom"
)
log_plots
stdres_plot_log <- data.frame(fit = fitted(meta_arm_log), rstand = rstandard(meta_arm_log)$z) %>%
ggplot(aes(x=fit, y=rstand)) +
geom_hline(yintercept=0, linetype = "dashed") +
geom_point(alpha=0.5) +
geom_smooth() +
labs(x = "Fitted values",
y = "Standardised Residuals",
title = "Linearity",
subtitle = "Reference line should be flat and horizontal") +
theme_classic()
res_plot_log <- data.frame(fit = fitted(meta_arm_log), rstand = rstandard(meta_arm_log)$resid) %>%
ggplot(aes(x=fit, y=rstand)) +
geom_hline(yintercept=0, linetype = "dashed") +
geom_point(alpha=0.5) +
geom_smooth() +
labs(x = "Fitted values",
y = "Observed Residuals",
title = "Linearity",
subtitle = "Reference line should be flat and horizontal") +
theme_classic()
(stdres_plot_log / res_plot_log)
